import { useParams } from "react-router-dom";
import { getQuote, saveQuote } from "../lib/storage";
import { exportElementToPDF } from "../lib/pdf";
import { useRef } from "react";

export default function QuotePage() {
  const { id } = useParams();
  const q = id ? getQuote(id) : undefined;
  const ref = useRef<HTMLDivElement>(null);

  if (!q) return <div>Quote not found.</div>;

  function onAccept() {
    const updated = { ...q, status: "ACCEPTED" as const };
    saveQuote(updated);
    alert("Accepted! (In real life: create booking, generate BOL, notify.)");
  }

  async function onPdf() {
    if (ref.current) await exportElementToPDF(ref.current, `Quote-${q.id}.pdf`);
  }

  return (
    <div className="space-y-8">
      <div className="flex items-center justify-between bg-white rounded-xl p-6 border border-gray-200 shadow-sm">
        <div>
          <h1 className="text-3xl font-bold text-gray-900">Quote #{q.id.slice(0,8)}</h1>
          <p className="text-gray-600">Generated by ZATO AI</p>
        </div>
        <div className={`px-4 py-2 rounded-full text-sm font-semibold ${
          q.status === "ACCEPTED" 
            ? "bg-green-100 text-green-800" 
            : q.status === "SENT"
              ? "bg-blue-100 text-blue-800"
              : "bg-gray-100 text-gray-800"
        }`}>
          {q.status}
        </div>
      </div>

      <div ref={ref} className="bg-white rounded-2xl p-8 border border-gray-200 shadow-sm">
        <div className="flex items-center justify-between mb-8">
          <div>
            <div className="text-2xl font-bold text-gray-900">Quote Options</div>
            <div className="text-gray-600">Valid until {new Date(q.validityUntil ?? Date.now()).toLocaleDateString()}</div>
          </div>
          <img src="/Zatov logo (485 x 126 px) (1).png" alt="ZATO AI" className="h-10" />
        </div>
        
        <div className="space-y-4">
          {q.options.map(o=>(
            <div key={o.id} className="rounded-xl p-6 bg-gray-50 border border-gray-200">
              <div className="flex items-center justify-between">
                <div>
                  <div className="text-xl font-bold text-gray-900">{o.carrier}</div>
                  <div className="text-gray-600">{o.service} 路 {o.transitDays} days</div>
                </div>
                <div className="text-3xl font-bold text-purple-600">${o.total.toFixed(2)}</div>
              </div>
              <div className="mt-4 text-sm text-gray-500 flex items-center space-x-6">
                Base ${o.base} 路 FSC ${o.fsc} 路 Acc ${o.accessorials} 路 Margin ${o.markup}
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className="flex items-center space-x-4">
        <button 
          onClick={onAccept} 
          className="px-6 py-3 rounded-xl bg-gradient-to-r from-purple-600 to-blue-700 text-white hover:shadow-lg hover:scale-105 transition-all duration-200 font-semibold"
        >
          Accept & Book
        </button>
        <button 
          onClick={onPdf} 
          className="px-6 py-3 rounded-xl border-2 border-gray-300 text-gray-700 hover:border-purple-400 hover:text-purple-600 transition-all duration-200 font-semibold"
        >
          Download PDF
        </button>
      </div>
    </div>
  );
}